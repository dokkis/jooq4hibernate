/**
 * This class is generated by jOOQ
 */
package com.fhoster.jooq4hibernate.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Address extends org.jooq.impl.TableImpl<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord> {

	private static final long serialVersionUID = -2114606017;

	/**
	 * The reference instance of <code>PUBLIC.ADDRESS</code>
	 */
	public static final com.fhoster.jooq4hibernate.jooq.tables.Address ADDRESS = new com.fhoster.jooq4hibernate.jooq.tables.Address();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord> getRecordType() {
		return com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord.class;
	}

	/**
	 * The column <code>PUBLIC.ADDRESS.ID_ADDRESS</code>.
	 */
	public final org.jooq.TableField<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord, java.lang.Long> ID_ADDRESS = createField("ID_ADDRESS", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.ADDRESS.NUMBER</code>.
	 */
	public final org.jooq.TableField<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord, java.lang.Integer> NUMBER = createField("NUMBER", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>PUBLIC.ADDRESS.STREET</code>.
	 */
	public final org.jooq.TableField<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord, java.lang.String> STREET = createField("STREET", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>PUBLIC.ADDRESS.ID_CITY</code>.
	 */
	public final org.jooq.TableField<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord, java.lang.Long> ID_CITY = createField("ID_CITY", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>PUBLIC.ADDRESS</code> table reference
	 */
	public Address() {
		this("ADDRESS", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.ADDRESS</code> table reference
	 */
	public Address(java.lang.String alias) {
		this(alias, com.fhoster.jooq4hibernate.jooq.tables.Address.ADDRESS);
	}

	private Address(java.lang.String alias, org.jooq.Table<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord> aliased) {
		this(alias, aliased, null);
	}

	private Address(java.lang.String alias, org.jooq.Table<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, com.fhoster.jooq4hibernate.jooq.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord> getPrimaryKey() {
		return com.fhoster.jooq4hibernate.jooq.Keys.SYS_PK_10092;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord>>asList(com.fhoster.jooq4hibernate.jooq.Keys.SYS_PK_10092);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<com.fhoster.jooq4hibernate.jooq.tables.records.AddressRecord, ?>>asList(com.fhoster.jooq4hibernate.jooq.Keys.FK_BV6UIUSPH2KO0KISD95B023XG);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.fhoster.jooq4hibernate.jooq.tables.Address as(java.lang.String alias) {
		return new com.fhoster.jooq4hibernate.jooq.tables.Address(alias, this);
	}

	/**
	 * Rename this table
	 */
	public com.fhoster.jooq4hibernate.jooq.tables.Address rename(java.lang.String name) {
		return new com.fhoster.jooq4hibernate.jooq.tables.Address(name, null);
	}
}

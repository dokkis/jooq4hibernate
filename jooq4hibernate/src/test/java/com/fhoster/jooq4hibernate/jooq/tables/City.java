/**
 * This class is generated by jOOQ
 */
package com.fhoster.jooq4hibernate.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class City extends org.jooq.impl.TableImpl<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord> {

	private static final long serialVersionUID = -276497252;

	/**
	 * The reference instance of <code>PUBLIC.CITY</code>
	 */
	public static final com.fhoster.jooq4hibernate.jooq.tables.City CITY = new com.fhoster.jooq4hibernate.jooq.tables.City();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord> getRecordType() {
		return com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord.class;
	}

	/**
	 * The column <code>PUBLIC.CITY.ID_CITY</code>.
	 */
	public final org.jooq.TableField<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord, java.lang.Long> ID_CITY = createField("ID_CITY", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.CITY.NAME</code>.
	 */
	public final org.jooq.TableField<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord, java.lang.String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>PUBLIC.CITY.ID_STATE</code>.
	 */
	public final org.jooq.TableField<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord, java.lang.Long> ID_STATE = createField("ID_STATE", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>PUBLIC.CITY</code> table reference
	 */
	public City() {
		this("CITY", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.CITY</code> table reference
	 */
	public City(java.lang.String alias) {
		this(alias, com.fhoster.jooq4hibernate.jooq.tables.City.CITY);
	}

	private City(java.lang.String alias, org.jooq.Table<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord> aliased) {
		this(alias, aliased, null);
	}

	private City(java.lang.String alias, org.jooq.Table<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, com.fhoster.jooq4hibernate.jooq.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord> getPrimaryKey() {
		return com.fhoster.jooq4hibernate.jooq.Keys.SYS_PK_10096;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord>>asList(com.fhoster.jooq4hibernate.jooq.Keys.SYS_PK_10096);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<com.fhoster.jooq4hibernate.jooq.tables.records.CityRecord, ?>>asList(com.fhoster.jooq4hibernate.jooq.Keys.FK_5BJQKU7O9NJVGVKP8KT1YPA3W);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.fhoster.jooq4hibernate.jooq.tables.City as(java.lang.String alias) {
		return new com.fhoster.jooq4hibernate.jooq.tables.City(alias, this);
	}

	/**
	 * Rename this table
	 */
	public com.fhoster.jooq4hibernate.jooq.tables.City rename(java.lang.String name) {
		return new com.fhoster.jooq4hibernate.jooq.tables.City(name, null);
	}
}

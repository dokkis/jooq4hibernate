/**
 * This class is generated by jOOQ
 */
package com.fhoster.jooq4hibernate.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeRecord extends org.jooq.impl.UpdatableRecordImpl<com.fhoster.jooq4hibernate.jooq.tables.records.EmployeeRecord> implements org.jooq.Record5<java.lang.Long, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long> {

	private static final long serialVersionUID = 1187658672;

	/**
	 * Setter for <code>PUBLIC.EMPLOYEE.ID_EMPLOYEE</code>.
	 */
	public void setIdEmployee(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.EMPLOYEE.ID_EMPLOYEE</code>.
	 */
	public java.lang.Long getIdEmployee() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.EMPLOYEE.FIRSTNAME</code>.
	 */
	public void setFirstname(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.EMPLOYEE.FIRSTNAME</code>.
	 */
	public java.lang.String getFirstname() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.EMPLOYEE.LASTNAME</code>.
	 */
	public void setLastname(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.EMPLOYEE.LASTNAME</code>.
	 */
	public java.lang.String getLastname() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.EMPLOYEE.CURRENT_ADDRESS_ID</code>.
	 */
	public void setCurrentAddressId(java.lang.Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.EMPLOYEE.CURRENT_ADDRESS_ID</code>.
	 */
	public java.lang.Long getCurrentAddressId() {
		return (java.lang.Long) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.EMPLOYEE.PERMANENT_ADDRESS_ID</code>.
	 */
	public void setPermanentAddressId(java.lang.Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>PUBLIC.EMPLOYEE.PERMANENT_ADDRESS_ID</code>.
	 */
	public java.lang.Long getPermanentAddressId() {
		return (java.lang.Long) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<java.lang.Long, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long> fieldsRow() {
		return (org.jooq.Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<java.lang.Long, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long> valuesRow() {
		return (org.jooq.Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return com.fhoster.jooq4hibernate.jooq.tables.Employee.EMPLOYEE.ID_EMPLOYEE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return com.fhoster.jooq4hibernate.jooq.tables.Employee.EMPLOYEE.FIRSTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return com.fhoster.jooq4hibernate.jooq.tables.Employee.EMPLOYEE.LASTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field4() {
		return com.fhoster.jooq4hibernate.jooq.tables.Employee.EMPLOYEE.CURRENT_ADDRESS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field5() {
		return com.fhoster.jooq4hibernate.jooq.tables.Employee.EMPLOYEE.PERMANENT_ADDRESS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getIdEmployee();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getFirstname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getLastname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value4() {
		return getCurrentAddressId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value5() {
		return getPermanentAddressId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value1(java.lang.Long value) {
		setIdEmployee(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value2(java.lang.String value) {
		setFirstname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value3(java.lang.String value) {
		setLastname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value4(java.lang.Long value) {
		setCurrentAddressId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value5(java.lang.Long value) {
		setPermanentAddressId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord values(java.lang.Long value1, java.lang.String value2, java.lang.String value3, java.lang.Long value4, java.lang.Long value5) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EmployeeRecord
	 */
	public EmployeeRecord() {
		super(com.fhoster.jooq4hibernate.jooq.tables.Employee.EMPLOYEE);
	}

	/**
	 * Create a detached, initialised EmployeeRecord
	 */
	public EmployeeRecord(java.lang.Long idEmployee, java.lang.String firstname, java.lang.String lastname, java.lang.Long currentAddressId, java.lang.Long permanentAddressId) {
		super(com.fhoster.jooq4hibernate.jooq.tables.Employee.EMPLOYEE);

		setValue(0, idEmployee);
		setValue(1, firstname);
		setValue(2, lastname);
		setValue(3, currentAddressId);
		setValue(4, permanentAddressId);
	}
}

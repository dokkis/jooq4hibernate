/**
 * This class is generated by jOOQ
 */
package com.fhoster.jooq4hibernate.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Company extends org.jooq.impl.TableImpl<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord> {

	private static final long serialVersionUID = -1757280896;

	/**
	 * The reference instance of <code>PUBLIC.COMPANY</code>
	 */
	public static final com.fhoster.jooq4hibernate.jooq.tables.Company COMPANY = new com.fhoster.jooq4hibernate.jooq.tables.Company();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord> getRecordType() {
		return com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord.class;
	}

	/**
	 * The column <code>PUBLIC.COMPANY.ID_COMPANY</code>.
	 */
	public final org.jooq.TableField<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord, java.lang.Long> ID_COMPANY = createField("ID_COMPANY", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.COMPANY.NAME</code>.
	 */
	public final org.jooq.TableField<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord, java.lang.String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>PUBLIC.COMPANY.ID_HEAD_OFFICE_ADDRESS</code>.
	 */
	public final org.jooq.TableField<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord, java.lang.Long> ID_HEAD_OFFICE_ADDRESS = createField("ID_HEAD_OFFICE_ADDRESS", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>PUBLIC.COMPANY</code> table reference
	 */
	public Company() {
		this("COMPANY", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.COMPANY</code> table reference
	 */
	public Company(java.lang.String alias) {
		this(alias, com.fhoster.jooq4hibernate.jooq.tables.Company.COMPANY);
	}

	private Company(java.lang.String alias, org.jooq.Table<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord> aliased) {
		this(alias, aliased, null);
	}

	private Company(java.lang.String alias, org.jooq.Table<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, com.fhoster.jooq4hibernate.jooq.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord> getPrimaryKey() {
		return com.fhoster.jooq4hibernate.jooq.Keys.SYS_PK_10100;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord>>asList(com.fhoster.jooq4hibernate.jooq.Keys.SYS_PK_10100);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<com.fhoster.jooq4hibernate.jooq.tables.records.CompanyRecord, ?>>asList(com.fhoster.jooq4hibernate.jooq.Keys.FK_5X4QDOOR9UUTWBWJJDDNHRUXN);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.fhoster.jooq4hibernate.jooq.tables.Company as(java.lang.String alias) {
		return new com.fhoster.jooq4hibernate.jooq.tables.Company(alias, this);
	}

	/**
	 * Rename this table
	 */
	public com.fhoster.jooq4hibernate.jooq.tables.Company rename(java.lang.String name) {
		return new com.fhoster.jooq4hibernate.jooq.tables.Company(name, null);
	}
}
